---
title: "BA project"
format: html
editor: visual
---

# **The Financial and Critical Impact of Female Representation in Films: A Study of Bechdel Test Outcomes**

## Background and Motivation

The Bechdel Test serves as a widely recognized measure of female representation in films, highlighting important discussions surrounding diversity and gender equality within the film industry. This topic is significant as it not only addresses the representation of women but also engages with broader societal issues such as gender stereotypes and equity.

The intersection of cultural metrics, exemplified by the Bechdel Test, and economic variables, including a film's budget and revenue, renders this research particularly compelling. By exploring how diversity impacts a film's commercial and critical success, the study examines two key dimensions: cultural representation and its potential economic and critical consequences.

This research aligns with the overarching goal of leveraging data-driven insights to comprehend the effects of cultural dynamics on creative industries. Through a combination of statistical, predictive, and exploratory analyses, the project aims to address questions of both social significance and commercial relevance.

## Project Objectives

### Main Objective

The primary objective of this project is to investigate the relationship between the Bechdel Test and other film-related factors, such as budget, genre, and director, on a film's revenue. The specific aims include:

-   Analyzing whether passing the Bechdel Test has a statistically significant effect on domestic gross or overall revenue.

-   Assessing if films that pass the Bechdel Test tend to win more awards or achieve higher IMDb ratings.

### Sub-goals

1.  **Predictive Modeling:** Developing a predictive model to estimate a film's success based on various factors, including the Bechdel Test result, its correlation with awards, and IMDb ratings. This model will provide insights into the probability of a film passing the Bechdel Test based on attributes such as budget, genre, and director.

2.  **Correlation Exploration:** Investigating correlations between a film's performance on the Bechdel Test and its revenue, as well as its awards and IMDb ratings, to uncover potential patterns and insights.

3.  **Trend Visualization:** Visualizing trends between films that either pass or fail the Bechdel Test and their associated economic data, including revenues, budgets, awards won, and IMDb ratings. This visualization will help elucidate the relationship between female representation and film success.

## Research Questions

In this section, we pose the following research questions to explore the potential influence of female representation in films on commercial and critical success. By examining correlations between Bechdel Test results and metrics like revenue, awards, and IMDb ratings, we aim to identify patterns that link gender diversity with performance outcomes. Additionally, we explore predictive models to assess whether factors such as budget, genre, and director can reliably estimate both a film’s success and its likelihood of passing the Bechdel Test. These questions guide our analysis to uncover data-driven insights into the economic and critical impact of gender representation in the film industry.

1.  Is there a significant correlation between passing the Bechdel test and a film's revenue?
2.  Do films that pass the Bechdel test tend to win more awards or receive higher IMDb ratings? 
3.  Can we build a predictive model to estimate a film’s success (revenue, awards, IMDb ratings) based on the Bechdel test results and other factors like budget, genre, and director?
4.  Can we develop a predictive model to determine whether a film will pass the Bechdel test based on factors such as budget, genre, and director?

## Data Collection

In this section, we outline the process of data collection and merging. The data sources for this project were obtained from data.world, where we can access to the following datasets:

-   **Dataset df:** It contains information regarding the Bechdel test outcomes for various films. The information was gather from BechdelTest.com and The-Numbers.com

-   **Dataset df2:** It includes additional film-related data, such as budget, revenue, genre, director, and awards. This information comes from the Imdb dataset.

The two datasets were successfully merged into a single primary data frame using the IMDb ID as the key. This process resulted in a consolidated dataset comprising 1,792 rows. Specific columns of interest were selected to facilitate further analysis and ensure the relevance of the data to our research objectives.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(jsonlite)
library(dplyr)
library(tidyr)
library(stringr)
library(tidyverse)
library(RColorBrewer)
library(ggplot2)

```

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
# Read json file
df <- fromJSON("https://query.data.world/s/mel73qzc35dvjcs54h4x4tatmvveaj?dws=00000")

# Read csv file
df2 <- read.csv("https://query.data.world/s/zosxjqvjiygclw2wix74pcp4vyesvb?dws=00000", header=TRUE, stringsAsFactors=FALSE);

#Merge the two dataset
merged_data <- merge(df2, df, by.x = "imdb", by.y = "imdbID", all = FALSE)

#Remove unwanted columns
df_final <- subset(merged_data, select = -c(domgross_2013.,Writer,Year, Actors, imdb, title, test, clean_test, domgross, intgross, Plot, code, period.code,decade.code, budget, Rated, Response, Metascore, Released, Runtime, Type, Poster, Error ))
```

## Data Cleaning

In the data cleaning section, we ensure the dataset is prepared for effective analysis by addressing any inconsistencies, missing values, and irrelevant entries. This process involves examining each variable to standardize formats, handle null values, and remove duplicates, ultimately enhancing the accuracy and reliability of the Exploratory Data Analysis and modeling phases. By refining the dataset, we lay a strong foundation for meaningful insights and trustworthy results in subsequent analyses.

1.  **Standardizing Column Names**\
    This section focuses on renaming columns to create a consistent and clear naming convention across the dataset, ensuring easier readability and usability for analysis.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
#Rename column

df_final <- df_final %>% 
  rename( Year = year, Bechdel_test_result = binary, Budget = budget_2013., Revenue = intgross_2013., Movie_Title = Title, Country_of_Origin = Country, Imdb_Rating = imdbRating, Imdb_Votes = imdbVotes)

```

2.  **Isolating Individual Values by Language, Genre, and Director**\
    Here, we separated entries with multiple values in the *Language*, *Genre*, and *Director* columns, creating distinct rows for each value. This transformation enables more granular analysis by ensuring each entry corresponds to a single language, genre, or director.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
# Seperate the language

df_final <- df_final %>%
  separate_rows(Language, sep = ", ")

# Seperate the Genre
df_final <- df_final %>%
  separate_rows(Genre, sep = ", ")

# Seperate the Director
df_final <- df_final %>%
  separate_rows(Director, sep = ", ")

```

3.  **Extracting and Summarizing Award Wins and Nominations**\
    In this section, we parsed the *Awards* column to isolate and categorize Oscar and other award wins and nominations. By extracting relevant numerical values, we created separate columns for *Wins* and *Nominations*, enabling a more detailed analysis of award performance. Intermediate columns were removed to streamline the dataset.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# Extract Wins and Nominations
# Updated code to process each row individually
df_final <- df_final %>%
  rowwise() %>%
  mutate(
    # Extract numbers after "Won " and before "wins"
    oscar_wins = replace_na(
      str_extract(Awards, "(?i)(\\d+)(?= win(s)?)") %>%
        str_replace_all("Another ", "") %>%
        as.numeric(), 
      0),
    
    # Extract numbers before "win(s)"
    other_wins = replace_na(
      str_extract(Awards, "(?i)\\bWon (\\d+)") %>%
        str_replace_all("Won ", "") %>%
        as.numeric(),
      0),
    
    Wins = rowSums(across(c(oscar_wins, other_wins))),
    
    oscar_nominations = replace_na(
      str_extract(Awards, "(?i)\\bNominated for (\\d+)") %>%
        str_replace_all("Nominated for ", "") %>%
        as.numeric(), 
      0),
    other_nominations = replace_na(
      str_extract(Awards, "(?i)(\\d+)(?= nomination(s)?)") %>%
        str_replace_all("Nominated ", "") %>%
        as.numeric(),
      0),
    
    Nominations = rowSums(across(c(oscar_nominations, other_nominations))),
  ) %>%
  select(-Awards, -oscar_wins, -other_wins, -oscar_nominations, -other_nominations) %>%  # Remove intermediate columns
  ungroup() # Ungroup after rowwise operations

```

4.  **Integrating Director Gender for Analysis**

    To explore the potential impact of a director's gender on a film’s performance in the Bechdel Test, we extended our dataset by merging it with an external table that maps names to gender. This table associates names with specific genders, where:

    -   male = 1

    -   Female = 0

    -   Unisex = 3

    For the purposes of our analysis, we assume these name-gender associations are accurate (e.g., "James" is classified as male). Given that only 101 out of 1,792 records are marked as unisex or have missing gender values, we decided to exclude these records when examining gender’s impact on other variables.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
# Open the dataset with the names associated with a gender
df_name <- read.csv("https://query.data.world/s/vosjabgwxpybit5vkwjkyv7przl6km?dws=00000", header=TRUE, stringsAsFactors=FALSE)
df_name[df_name$name == "James",]

df_name <- df_name %>% 
  rename( Gender = gender)

# Separate the column 'director' into 'Name' and 'Last_Name' at the first space
df_final <- df_final %>%
  separate(Director, into = c("Name", "Last_Name"), sep = " ", extra = "merge", fill = "right")

#merge the two dataset and match the name of the director to a gender  
df_final_gender <- left_join(df_final, df_name, by = c("Name" = "name"))
df_final_gender <- df_final_gender %>%
  select(-score)

print(df_final_gender)


```

5.  **Reconstructing the Director's Full Name**\
    In this step, we recreate a column that combines the director's first and last name. If the last name is missing, we use only the first name; otherwise, both names are concatenated. This provides a consistent format for the director's name across the dataset, which we store in the new column *Director_Name*. We then remove the *Name* and *Last_Name* columns to streamline the dataset.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
# Recreate a column with the directors name
df_final_gender$Director_Name <- ifelse(
  is.na(df_final_gender$Last_Name), 
  df_final_gender$Name, 
  paste(df_final_gender$Name, df_final$Last_Name)
)

df_final <- df_final_gender %>%
  select(-Name, -Last_Name)


```

6.  **Converting Bechdel Test Results to Binary Format**\
    We create a binary column, *Bechdel_binary*, to indicate whether each film passed the Bechdel Test, where a "PASS" result is represented as **`1`** and a "FAIL" result as **`0`**. This binary format allows for easier analysis and statistical modeling.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
# Adding a column of Bechdel_test_result as binary
df_final$Bechdel_binary <- as.factor(ifelse(df_final$Bechdel_test_result == "PASS", 1, 0))
```

7.  **Ensuring Correct Variable Types for Exploratory Data Analysis**\
    To prepare for exploratory data analysis, we set appropriate data types for each variable. *Gender*, *Genre*, *Language*, *Country_of_Origin*, *Bechdel_test_result*, and *Bechdel_binary* are converted to categorical variables, while *Revenue*, *Imdb_Rating*, and *Imdb_Votes* are transformed to numeric types for accurate calculations.

```{r}

#| code-fold:true
#| code-summary: "Click to show code"
# To make sure our EDA works we need to make sure the type of the variable is correct
# Gender, Genre, language --> to categorical
df_final[c ("Gender","Genre", "Language", "Country_of_Origin", "Bechdel_test_result", "Bechdel_binary")] <- lapply (df_final [c("Gender","Genre", "Language", "Country_of_Origin", "Bechdel_test_result", "Bechdel_binary")], as.factor)

#Revenue, Imdb_Rating,Imdb_Votes :from character to numeric
df_final$Imdb_Votes <- as.numeric(gsub(",", "", df_final$Imdb_Votes))
df_final[c("Revenue", "Imdb_Rating", "Imdb_Votes")] <- lapply(df_final[c("Revenue", "Imdb_Rating", "Imdb_Votes")], as.numeric)

# The types of variables our dataset has
str(df_final)

```

8.  **Handling Missing Values**\
    After checking for missing values, we find that *Revenue* and *Gender* have some `NA` entries. Since these missing values could impact analysis, we remove rows with any `NA` values to maintain data integrity in the final dataset.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
na_counts <- colSums(is.na(df_final)) ## 32 NA in Revenue and 342 in Gender
df_final <- na.omit(df_final)

```

## Exploratory Data Analysis

This exploratory analysis aims to uncover relationships between female representation in films, as measured by the Bechdel test, and their commercial success as indicated by revenue and awards. By visualizing the data and assessing correlations among these variables, we can gain insights into the impact of diversity in film on its critical and financial performance.

1.  **Creating a Deduplicated Dataset for Analysis**\
    In this step, we create a deduplicated dataset based on unique film titles. This dataset will be used for analysis in all columns except for *Genre* and *Language*. By grouping the data by *Movie_Title* and selecting the first occurrence of each variable, we ensure that only one entry per film is considered for analysis. We then summarize the dataset to count the number of distinct values in each column, providing an overview of the diversity within the data.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
library(DT)
# Create a deduplicated dataset based on unique film titles
df_unique <- df_final %>% 
  group_by(Movie_Title) %>% 
  summarise(across(everything(), ~ first(.)))

# Summarize the number of distinct values for each column
summary_data <- df_unique %>%
  summarise(across(everything(), ~ n_distinct(.)))

# Convert the summary data to an interactive table using DT
summary_data_table <- datatable(summary_data, options = list(pageLength = 5))

# Print the interactive table
summary_data_table


```

\

2.  **Summarizing Categorical Variables**\
    In this step, we summarize the categorical variables, including *Bechdel_test_result*, *Genre*, *Gender*, and *Bechdel_binary*, by counting the occurrences of each unique category. This provides an overview of the distribution of these variables in the dataset, which is essential for understanding their role in the analysis.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"
#install.packages("DT")
library(DT)
# Summarize the Bechdel test result, Genre, and Gender with counts
bechdel_test_summary <- df_unique %>%
  count(Bechdel_test_result, name = "count") %>%
  rename(Category = Bechdel_test_result) %>%
  mutate(Variable = "Bechdel_test_result") # Add the variable name

genre_summary <- df_unique %>%
  count(Genre, name = "count") %>%
  rename(Category = Genre) %>%
  mutate(Variable = "Genre of the film") # Add the variable name

gender_summary <- df_unique %>%
  count(Gender, name = "count") %>%
  rename(Category = Gender) %>%
  mutate(Variable = "Gender of Directors") # Add the variable name

# Create interactive tables with DT
bechdel_test_table <- datatable(bechdel_test_summary, options = list(pageLength = 5))
genre_summary_table <- datatable(genre_summary, options = list(pageLength = 5))
gender_summary_table <- datatable(gender_summary, options = list(pageLength = 5))

# Print the interactive tables
bechdel_test_table
genre_summary_table
gender_summary_table
```

3.  **Summarizing Numerical Variables**\
    In this step, we summarize the key numerical columns, including *Budget*, *Revenue*, *Imdb_Rating*, *Imdb_Votes*, *Wins*, and *Nominations*. This summary provides descriptive statistics for these variables, offering insights into their distribution and range, which are essential for understanding their role in the analysis of film performance.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(DT)

# Summarize the numerical columns
numerical_summary <- summary(df_unique[, c("Budget", "Revenue", "Imdb_Rating", "Imdb_Votes", "Wins", "Nominations")])

# Convert the summary into a data frame for easier viewing
numerical_summary_df <- as.data.frame(numerical_summary)

# Convert the numerical summary data to an interactive table using DT
numerical_summary_table <- datatable(numerical_summary_df, options = list(pageLength = 5))

# Print the interactive table
numerical_summary_table
```

### Correlation Heatmap: Revenue, Budget, Imdb_Rating, Wins, Nominations 

In this step, we present a correlation heatmap that displays the relationships between key variables: **Revenue**, **Budget**, **IMDb Rating**, **Wins**, and **Nominations**. By examining the correlation coefficients between these variables, this heatmap provides insights into the degree and direction of association among financial, critical, and award-related metrics. Positive correlations indicate that as one variable increases, the other tends to increase as well, while negative correlations suggest an inverse relationship. This visualization serves as a preliminary analysis, helping us identify which factors are most closely linked, and providing a basis for further exploration of the economic and critical impacts of female representation in films.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(plotly)

# Calculate correlation matrix
num_cols <- df_final %>% 
  select(Revenue, Budget, Imdb_Rating, Wins, Nominations)
corr_matrix <- cor(num_cols, use = "complete.obs")

# Convert correlation matrix to long format using tidyr
corr_long <- corr_matrix %>%
  as.data.frame() %>%
  mutate(Var1 = rownames(.)) %>%
  pivot_longer(cols = -Var1,
              names_to = "Var2",
              values_to = "value")

# Create the interactive heatmap with correlation values on the tiles
heatmap <- ggplot(corr_long, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                      midpoint = 0, limit = c(-1,1)) +
  geom_text(aes(label = round(value, 2)), color = "black", size = 4) + # Add correlation values on tiles
  labs(title = "Correlation Heatmap: Revenue, Budget, Imdb_Rating, Wins, Nominations", x = "", y = "",
       fill = "Correlation") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),  # Center the title
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

# Make the heatmap interactive using plotly
ggplotly(heatmap)
```

### Interpretation:

-   **High Positive Correlations:**

    -   **Budget and Revenue (0.62):** This indicates a strong positive correlation, meaning higher budgets are generally associated with higher revenue.

    -   **Wins and Nominations (0.77):** This strong positive correlation shows that movies with more nominations tend to win more awards.

-   **Moderate Correlations:**

    -   **Budget and Wins (0.49):** Movies with larger budgets tend to have more wins, though the correlation is not very strong.

    -   **IMDb Rating and Nominations (0.48):** Higher IMDb ratings tend to correspond with more nominations, suggesting critical acclaim can influence recognition.

-   **Weak or No Correlations:**

    -   **Budget and IMDb Rating (-0.04):** Budget has almost no correlation with IMDb ratings, indicating that higher spending doesn't necessarily lead to better viewer ratings.

    -   **Wins and IMDb Rating (0.06):** Wins also show a very weak correlation with IMDb ratings, suggesting award success and viewer ratings are largely independent.

### Revenue Distribution by Bechdel Test Outcome

In this step, we examine the distribution of movie revenues based on whether films pass or fail the Bechdel Test. Using a violin plot overlaid with boxplots, we visualize the log-transformed revenue to handle any large variances in revenue data, which allows us to better observe patterns across Bechdel Test outcomes. This visualization helps us assess whether movies that pass the Bechdel Test tend to have different revenue distributions compared to those that fail, providing preliminary insights into the financial impact of female representation in films.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(plotly)

# Check for any missing or NA values in the Revenue column to ensure data integrity
df_unique <- df_unique %>% drop_na(Revenue)

# Create the interactive plot with specified colors
plot <- ggplot(df_unique, aes(x = factor(Bechdel_binary), y = log(Revenue), fill = factor(Bechdel_binary))) +
  geom_violin(alpha = 0.7) +
  geom_boxplot(width = 0.2, alpha = 0.8, outlier.shape = NA) +
  scale_fill_manual(values = c("0" = "#FF7F50", "1" = "#4CAF50"), labels = c("Fail", "Pass")) +
  scale_x_discrete(labels = c("0" = "Fail", "1" = "Pass")) +
  labs(
    title = "Movie Revenue Distribution by Bechdel Test Result",
    subtitle = "Log of Revenue",
    x = "Bechdel Test Result",
    y = "Revenue (Log Scale)",
    fill = "Test Result"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    plot.subtitle = element_text(hjust = 0.5, size = 10),
    legend.position = "bottom",
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12)
  )


ggplotly(plot)
```

### Interpretation:

According this violin plot that illustrates the revenue distribution for films based on their Bechdel Test results. Films that **fail the Bechdel Test** generally show a **higher median revenue** compared to those that pass. Additionally, the revenue distribution for failing films has greater variability, with some reaching notably high revenues, while others fall to lower extremes, as shown by the extended tails of the violin plot. In contrast, films that **pass the Bechdel Test** have a more condensed revenue distribution, indicating less variability and a slightly lower median revenue.

Overall, this suggests that films failing the Bechdel Test may achieve higher revenues on average, though the reasons behind this trend likely involve other factors, such as genre or marketing, which would require further analysis to clarify.

### Revenue Distribution by Genre and Bechdel Test Outcome

In this section we use a boxplot that compares film revenues across different genres, with results segmented by whether the films pass or fail the Bechdel Test.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(plotly)

# interactive plot
plot <- ggplot(df_final, aes(x = Genre, y = Revenue, fill = factor(Bechdel_binary))) +
  geom_boxplot(outlier.shape = NA, alpha = 0.8) +  # Set transparency for better visibility
  scale_y_log10() +  # Log scale to handle revenue variability
  labs(
    title = "Revenue Distribution by Genre and Bechdel Test Result",
    subtitle = "Comparing Revenue Across Genres by Bechdel Test Outcome",
    x = "Genre", 
    y = "Revenue (Log Scale)", 
    fill = "Bechdel Test Result\n(0 = Fail, 1 = Pass)"
  ) +
  scale_fill_manual(values = c("0" = "#FF7F50", "1" = "#4CAF50"),  # Orange for Fail, Green for Pass
                    labels = c("Fail", "Pass")) +
  theme_minimal() + 
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),  # Centered title
    plot.subtitle = element_text(hjust = 0.5, size = 10),  # Centered subtitle
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate genre labels
    axis.title = element_text(size = 12),
    legend.position = "bottom"  # Move legend to bottom for more space
  )

# Convert to interactive plot
ggplotly(plot)
```

### Interpretation:

The plot suggests that while revenue varies significantly across genres, the Bechdel Test result does not have a consistent impact on revenue within each genre. Certain genres like Adventure, Sci-Fi, and Action show generally higher revenues, but this trend appears irrespective of the Bechdel Test outcome.

### Revenue vs. IMDb Rating Scatter Plot with Bechdel Test Outcome

This scatter plot visualization provides insight into the relationship between a film's IMDb rating and its revenue, while highlighting the results of the Bechdel Test as a key variable. It aims to observe any trends in rating and revenue associated with gender representation. A smooth trend line added to the data helps to highlight overarching patterns, while a logarithmic scale on the revenue axis accounts for the large revenue disparities often found across films.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# Load necessary libraries
library(ggplot2)
library(plotly)

# Your ggplot code
p <- ggplot(df_unique, aes(x = Imdb_Rating, y = Revenue, color = factor(Bechdel_binary))) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "loess", se = FALSE) +  # Add trend lines without confidence intervals
  scale_y_log10() + 
  scale_color_manual(values = c("0" = "#FF7F50", "1" = "#4CAF50")) +  # Set colors for Bechdel_binary
  labs(title = "Revenue vs. IMDb Rating by Bechdel Test Result",
       x = "IMDb Rating", y = "Log of Revenue", color = "Bechdel Test (0 = Fail, 1 = Pass)") +
  theme_minimal()

ggplotly(p)



```

Passing the Bechdel Test does not appear to have a major impact on revenue, as both passing and failing movies follow similar trends in terms of IMDb Rating and Revenue. Instead, IMDb rating itself seems to be the stronger indicator of revenue potential across both groups, though this effect is relatively modest

### Wins by Bechdel Test Result

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# Using dplyr to create summary statistics
summary_stats <- df_unique %>%
  group_by(Bechdel_binary) %>%
  summarise(
    Mean_Wins = mean(Wins, na.rm = TRUE),
    Median_Wins = median(Wins, na.rm = TRUE),
    Count = n()
  ) %>%
  mutate(
    Mean_Wins = round(Mean_Wins, 2),
    Median_Wins = round(Median_Wins, 2)
  )

summary_stats
```

We see that failing the test is more common. The average number of win remains the same but the change is that 50% of films that passed the test had at least 4 awards and for those failing the test, 50% of them had at least 3 awards.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(plotly)

# Create the interactive plot
plot <- ggplot(df_unique, aes(x = Bechdel_binary, y = Wins, fill = Bechdel_binary)) +
  geom_boxplot(outlier.shape = NA) +
  labs(title = "Awards by Bechdel Test Result",
       x = "Bechdel Test Result", 
       y = "Number of Awards",
       fill = "Bechdel Test (0 = Fail, 1 = Pass)") +
  scale_fill_manual(values = c("0" = "#FF7F50", "1" = "#4CAF50")) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +
  ylim(0,20) +  # Set y-axis limits to 0 and 45
  # Add text annotation with statistics
  annotate("text", 
           x = 1:2, 
           y = 45,  # Position the text at the top of the y-axis
           label = paste("Mean:", round(tapply(df_final$Wins, df_final$Bechdel_binary, mean, na.rm = TRUE), 2),
                         "\nMedian:", round(tapply(df_final$Wins, df_final$Bechdel_binary, median, na.rm = TRUE), 2)),
           vjust = -0.5)

ggplotly(plot)

```

### IMDb Ratings by Bechdel Test Result

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(tidyr)
library(ggplot2)
library(plotly)

# Create the interactive plot
plot <- ggplot(df_unique, aes(x = factor(Bechdel_binary), y = Imdb_Rating, fill = factor(Bechdel_binary))) +
  geom_boxplot(outlier.shape = NA) +
  labs(title = "IMDb Ratings by Bechdel Test Result",
       x = "Bechdel Test Result (0 = Fail, 1 = Pass)", y = "IMDb Rating") +
  scale_fill_manual(values = c("0" = "#FF7F50", "1" = "#4CAF50")) +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))

ggplotly(plot)
```

### Trend Analysis Over Time (Percentage of Movies Passing Bechdel Test)

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

library(dplyr)
library(ggplot2)
library(plotly)

# Calculate the percentage of movies passing the Bechdel test by year
df_trend <- df_unique %>%
  group_by(Year) %>%
  summarize(pass_rate = mean(Bechdel_binary == 1, na.rm = TRUE) * 100)

# Create the interactive plot
plot <- ggplot(df_trend, aes(x = Year, y = pass_rate)) +
  geom_line(color = "blue") +
  geom_point(color = "blue") +
  labs(title = "Percentage of Movies Passing the Bechdel Test Over Time",
       x = "Year", y = "Percentage Passing Bechdel Test") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))

ggplotly(plot)
```

## Gender of Director impact

This part will explore how the gender of the director impact the data such as the budget, the revenue, the Imdb score, and the Bechedel test

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

ggplot(
  data = df_unique %>% filter(Gender %in% c(0, 1)),
  mapping = aes(x = as.factor(Gender), fill = as.factor(Gender))
) +
  geom_bar(width = 0.5) +  # Set bar width here
  labs(
    x = "Director Gender (1 = Male, 0 = Female)",  # Label for x-axis
    y = "Count",                                   # Label for y-axis
    title = "Count of Films by Director Gender",
    fill = "Gender"
  ) +
  scale_fill_manual(values = c("#DB9ADB", "#4062DB")) +  # Customize colors for each gender
  ylim(0, 2000) +  # Set y-axis limit
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    axis.text.x = element_text(size = 10),
    axis.text.y = element_text(size = 10)
  ) +
  geom_text(
    stat = "count",
    aes(label = ..count..),  # Show count on top of each bar
    vjust = -0.5,
    position = position_dodge(width = 0.5)  # Aligns text to center of each bar width
  )

```

```{r}
# Director VS budget
ggplot(
  data = df_unique %>% filter(Gender %in% c(0, 1)),
  mapping = aes(x = factor(Gender), y = log(Budget), fill = factor(Gender))
) +
  geom_boxplot(outlier.shape = NA) +  # Hide outliers if they clutter the plot
  scale_fill_manual(values = c("0" = "#DB9ADB", "1" = "#4062DB")) +  # Color for male (0) and female (1)
  labs(title = "Budget Distribution by Director Gender",
       x = "Director Gender (1 = Male, 0 = Female)",
       y = "Log of Budget",
       fill = "Gender") +
  theme_minimal()

```

**Gender vs Revenue**

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

df_unique %>%
  filter(Gender %in% c(0, 1)) %>%
  group_by(Gender) %>%
  summarize(
    Mean_Revenue = mean(Revenue, na.rm = TRUE),
    Median_Revenue = median(Revenue, na.rm = TRUE),
    Count = n()
  )
```

### Genre of movies

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# What genre pass the test, we use df_final because we look at the genre column
df_pass <- df_final %>%
  filter(Bechdel_binary == 1)

data_genre <- df_pass %>%
  group_by(Genre) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

# Reorder Genre by percentage
data_genre <- data_genre %>%
  mutate(Genre = fct_reorder(Genre, percentage, .desc = TRUE))
palette_21 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", 
                "#ffd92f", "#e5c494", "#b3b3b3", "#1f78b4", "#33a02c", 
                "#e31a1c", "#ff7f00", "#6a3d9a", "#b15928", "#a6cee3",
                "#fb9a99", "#fdbf6f", "#cab2d6", "#ffff99", "#b2df8a", "#5A9BD5")
# Plot with reordered genres
ggplot(data_genre, aes(x = "", y = percentage, fill = Genre)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  scale_fill_manual(values = palette_21) + 
  labs(title = "Distribution of Genres Among Movies Passing the Bechdel Test",
       fill = "Genre") +
  theme_void() +
  geom_text(aes(label = ifelse(percentage > 3, paste0(round(percentage, 1), "%"), "")),
            position = position_stack(vjust = 0.5))

```

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# What about the ones that fail
df_fail <- df_final %>%
  filter(Bechdel_binary == 0)

data_genre <- df_fail %>%
  group_by(Genre) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

# Reorder Genre by percentage
data_genre <- data_genre %>%
  mutate(Genre = fct_reorder(Genre, percentage, .desc = TRUE))

palette_22 <- c("#8DA0CB", "#E78AC3", "#66C2A5", "#FC8D62", "#FFD92F", 
                "#A6D854", "#B3B3B3", "#E5C494", "#FF7F00", "#1F78B4", 
                "#6A3D9A", "#E31A1C", "#33A02C", "#CAB2D6", "#FB9A99",
                "#A6CEE3", "#B15928", "#B2DF8A", "#5A9BD5", "#FFFF99", "#FDBF6F")

# Plot with reordered genres
ggplot(data_genre, aes(x = "", y = percentage, fill = Genre)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  scale_fill_manual(values = palette_22) + 
  labs(title = "Distribution of Genres Among Movies failing the Bechdel Test",
       fill = "Genre") +
  theme_void() +
  geom_text(aes(label = ifelse(percentage > 3, paste0(round(percentage, 1), "%"), "")),
            position = position_stack(vjust = 0.5))
```

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# Calculate counts and percentages by Gender and Bechdel Test result
data_gender_bechdel <- df_unique %>%
  filter(Gender %in% c(0, 1)) %>%
  group_by(Gender, Bechdel_binary) %>%
  summarize(count = n()) %>%
  group_by(Gender) %>%
  mutate(percentage = count / sum(count) * 100)

# Plot
ggplot(data_gender_bechdel, aes(x = as.factor(Gender), y = count, fill = as.factor(Bechdel_binary))) +
  geom_bar(stat = "identity", width = 0.5, position = "fill") +  # Use position = "fill" for percentage stack
  labs(
    x = "Director Gender (0 = Female, 1 = Male)",  # Label for x-axis
    y = "Percentage of Movies",                    # Label for y-axis
    title = "Percentage of Films Passing the Bechdel Test by Director Gender",
    fill = "Bechdel Test Result\n(0 = Fail, 1 = Pass)"
  ) +
  scale_fill_manual(values = c("0" = "#FF7F50", "1" = "#4CAF50")) +  # Customize colors for pass/fail
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    axis.text.x = element_text(size = 10),
    axis.text.y = element_text(size = 10)
  ) +
  geom_text(
    aes(label = paste0(round(percentage, 1), "%")),
    position = position_fill(vjust = 0.5),  # Center text within each stack
    color = "white",
    size = 3
  )

```

Unsurprisingly, female directors are better in passing Bechdel test.

```{r}
#| code-fold:true
#| code-summary: "Click to show code"

# Count Bechdel_binary values grouped by Gender
counts <- df_unique %>%
  group_by(Gender, Bechdel_binary) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(
    Gender_desc = case_when(
      Gender == 0 ~ "Female",
      Gender == 1 ~ "Male",
      Gender == 3 ~ "Unisex"
    ),
    Bechdel_binary_desc = ifelse(Bechdel_binary == 0, "Fail", "Pass")
  ) %>%
  select(Gender_desc, Bechdel_binary_desc, count)  # Select only the semantic columns

# Display the results with semantic descriptions on the left
print(counts)
```
